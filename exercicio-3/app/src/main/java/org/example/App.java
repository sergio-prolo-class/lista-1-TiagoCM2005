/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import java.util.Random;

public class App { 
    static final int tamanho_tab = 10;
    static char[][] tab = new char[tamanho_tab][tamanho_tab];  // cria um bi vetor, assim é possível acessar tanto a linha quanto a coluna do tabuleiro  
    
    static void tabuleiro(){
        
        for(int i = 0; i < tamanho_tab; i++){
            for(int j = 0; j < tamanho_tab; j++){
                tab[i][j] = '.'; // Tanto i quanto j vão iterar até o tamanho (10) fixado no código, adicionando ponto em cada valor do vetor
            }
            
        }
    }

    static void posiciona(char simbolo, int tamanho) {
        Random rand = new Random();
        boolean loop = true;
        while(!loop) {
            int linha = rand.nextInt(tamanho_tab);
            int coluna = rand.nextInt(tamanho_tab);
            int sentido = rand.nextInt(2);
            
            if (valida(linha,coluna,tamanho,sentido) == 0) {
                for(int i = 0; i < tamanho; i++){
                    if(sentido == 0) {
                        tab[linha + i][coluna] = simbolo;
                    } else {
                        tab[linha][coluna + i] = simbolo;
                    }
                }
                loop = false;
            }
        }
    }

    static int valida(int linha, int coluna, int tamanho, int posicao){
        
        Random rand = new Random();
        
        posicao = rand.nextInt(2); // vertical = 0 || horizontal = 1
        
        if (posicao == 0) {
            if(coluna + tamanho > tamanho_tab) // a variavel tamanho se refere ao tamanho do navio
                return -1;
            for(int i = 0; i < tamanho_tab; i++){
                if(tab[linha][coluna + i] != '.') // Quando a posição é igual a 0, é preciso fazer duas verificações
                return -1;                              // Verificar se não ultrapassa da borda e se não à nada além do ponto
            }
        } else {
            if(linha + tamanho > tamanho_tab) 
            return -1;
            for (int j = 0; j < tamanho_tab; j++){ // aqui se verifica a linha, mesma logica
                if(tab[linha+1][coluna] != '.') 
                return -1;
            }
        }

        return 0; // Se ele não entrar em nenhum IF, vai retornar a 0, assim é possível saber que aquele ponto está livre e pode-se colocar qualquer navio
    }
   public static void main(String[] args) {
    }




}
